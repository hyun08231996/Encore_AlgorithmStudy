What is Stack?

- Literal definition: an orderly pile of objects
- In computer science, it represents a sequence of objects or elements in a linear data structure format. It can be accessed from only one side.
- It is based on a principle of LIFO (Last-In, First-Out)
- It contains three operations: push, peek, pop
- Example: previous page and next page of websites

Structure of Stack

- Say there is a pile of books, where Book 1 is on the bottom, Book 2 is stacked on top of Book 1, and Book 3 on top of Book 2...
- To stack Book 4 on top of Book 3, the push operation is used.
- To check the last book added, the peek operation is used.
- And to remove the last book added, the pop operation is used.

Use in Python

class Stack(list):
  push = list.append
  def peek(self):
    return self[-1]
    or return self[len(self)-1]
  (pop is a built-in function, so it doesn't need to be created)

s = Stack()
s.push(1)
s.push(2)
s.push(3)
print(s) → [1, 2, 3]
print(s.pop()) → 3
print(s) → [1, 2]
print(s.peek()) → 2
print(s) → [1, 2] // using the peek function doesn't change the list

What is Queue?

- Literal definition: a list of data items stored so as to be retrievable in a definite order
- In computer science, it is a linear structure which follows a particular order in which the operations are performed. It can be accessed from either side.
- It is based on a principle of FIFO (First-In, First-Out)
- It contains three operations: put, peek, get
- Example: printer

Structure of Queue

- Say there are three boxes (Box 1, Box 2, Box 3) orderly placed on top of a conveyor belt
- To add box 4 next to Box 3, the put operation is used.
- To check the first box, the peek operation is used.
- And to remove the first box, the get operation is used.

Use in Python

class Queue(list):
  put = list.append
  def peek(self):
    return self[0]
  def get(self):
    return self.pop(0)

q = Queue()
q.put(1)
q.put(2)
q.put(3)
print(q) → [1, 2, 3]
print(q.get()) → 1
print(q) → [2, 3]
print(q.peek()) → 2
print(q) → [2, 3] // using the peek function doesn't change the list
